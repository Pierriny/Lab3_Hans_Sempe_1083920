<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>